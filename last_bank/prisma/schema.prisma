// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//Prisma Client returns all DateTime as ISO 8601-formatted strings.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")

}

model User {
  id        String    @id @unique @default(uuid())
  email     String    @unique
  password  String
  firstName String
  lastName  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  incomes   Income[]
  bills     Bill[]
  accounts  Account[]
  profile   Profile?

}

model Income {
  id            String   @id @unique @default(uuid())
  source        String
  accountNumber Int?
  amount        Float
  due_date      DateTime
  recurring     Boolean  @default(true)
  paid          Boolean  @default(false)
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  user          User[]   @relation
  userId        String
}

model Bill {
  id            String   @id @unique @default(uuid())
  source        String
  accountNumber Int?
  amount        Float
  due_date      DateTime
  recurring     Boolean  @default(true)
  paid          Boolean  @default(false)
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  user          User[]   @relation
  userId        String
}

model Account {
  id            String   @id @unique @default(uuid())
  source        String
  accountNumber Int?
  accountType   String
  amount        Float
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  user          User[]   @relation
  userId        String
}

model Profile {
  id               String    @id @unique @default(uuid())
  birthDay         DateTime?
  currentLocation  String?
  preferredPronoun String?
  occupation       String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @default(now())
  User             User?     @relation(fields: [userId], references: [id])
  userId           String?   @unique
}
